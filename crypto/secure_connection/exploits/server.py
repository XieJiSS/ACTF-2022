import socketserver
import argparse
from core import connection_handle_request, connection_engine

dump_or_not = False


class MySecureHandler(socketserver.BaseRequestHandler):
    def handle(self):
        handler = connection_handle_request(self.request, "slave", dump_or_not)
        connection_engine(handler, "slave", True)


def banner():
    print('''
     ___  ___  ___ _   _ _ __ ___  ___ ___  _ __  _ __  
    / __|/ _ \/ __| | | | '__/ _ \/ __/ _ \| '_ \| '_ \ 
    \__ \  __/ (__| |_| | | |  __/ (_| (_) | | | | | | |
    |___/\___|\___|\__,_|_|  \___|\___\___/|_| |_|_| |_|
                                                            
    SERVER
    ''')


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-p", "--port", help="server running port", type=int, required=True)
    parser.add_argument("-d", "--dump", action="store_true", default=False,
                        help="dump payload of packet")
    args = parser.parse_args()

    HOST, PORT = "0.0.0.0", args.port

    dump_or_not = args.dump

    banner()

    with socketserver.TCPServer((HOST, PORT), MySecureHandler) as server:
        # Activate the server; this will keep running until you
        # interrupt the program with Ctrl-C
        server.serve_forever()
